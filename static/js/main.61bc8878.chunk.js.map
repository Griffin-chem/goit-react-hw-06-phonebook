{"version":3,"sources":["reducer/types.js","components/ContactForm/styledContactForm.js","components/ContactForm/ContactForm.js","components/SearchField/styledSearch.js","components/SearchField/SearchField.js","components/ContactList/styledContactList.js","components/ContactList/ContactList.js","styledApp.js","App.js","reducer/reducer.js","reducer/store.js","index.js"],"names":["types","addContact","removeContact","changeFilter","FormCSS","styled","form","LabelCSS","label","TextInputCSS","input","SubmitCSS","newContact","name","number","id","uuidv4","connect","state","dispatch","type","value","useState","setName","setNumber","onSubmit","e","preventDefault","htmlFor","onChange","target","pattern","title","required","placeholder","SearchCSS","text","console","log","filter","ListCSS","ul","getFilteredContacts","allContacts","normalizedFilter","toLowerCase","includes","contacts","items","map","key","onClick","AppCSS","div","Caption","h1","SubTitle","h2","createAction","reducer","createReducer","action","some","alert","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61bc8878.chunk.js","sourcesContent":["const types = {\r\n  addContact: \"contacts/add\",\r\n  removeContact: \"contacts/remove\",\r\n  changeFilter: \"contacts/filter\",\r\n};\r\n\r\nexport default types;\r\n","import styled from \"styled-components\";\r\n\r\nconst FormCSS = styled.form`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst LabelCSS = styled.label`\r\n  display: inline-block;\r\n  width: 20%;\r\n  font-size: 16px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst TextInputCSS = styled.input`\r\n  display: inline-block;\r\n  width: 70%;\r\n  font-size: 16px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst SubmitCSS = styled.input`\r\n  display: block;\r\n  width: auto;\r\n  font-size: 16px;\r\n  padding: 5px;\r\n`;\r\n\r\nexport { FormCSS, LabelCSS, TextInputCSS, SubmitCSS };\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport types from \"../../reducer/types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport {\r\n  FormCSS,\r\n  LabelCSS,\r\n  TextInputCSS,\r\n  SubmitCSS,\r\n} from \"./styledContactForm\";\r\n\r\nconst ContactForm = ({ addContact }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  return (\r\n    <FormCSS\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        addContact(name, number);\r\n      }}\r\n    >\r\n      <LabelCSS htmlFor=\"name_input\">Name</LabelCSS>\r\n      <TextInputCSS\r\n        id=\"name_input\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={(e) => setName(e.target.value)}\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        placeholder=\"Input name...\"\r\n      ></TextInputCSS>\r\n      <LabelCSS htmlFor=\"number_input\">Phone</LabelCSS>\r\n      <TextInputCSS\r\n        id=\"number_input\"\r\n        name=\"number\"\r\n        type=\"tel\"\r\n        value={number}\r\n        onChange={(e) => setNumber(e.target.value)}\r\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n        required\r\n        placeholder=\"Input number...\"\r\n      ></TextInputCSS>\r\n      <SubmitCSS type=\"submit\" value=\"Add contact\"></SubmitCSS>\r\n    </FormCSS>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state,\r\n});\r\n\r\nconst newContact = (name, number) => {\r\n  return { id: uuidv4(), name, number };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (name, number) => {\r\n    dispatch({\r\n      type: types.addContact,\r\n      value: newContact(name, number),\r\n    });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import styled from \"styled-components\";\r\n\r\nconst SearchCSS = styled.input`\r\n  display: inline-block;\r\n  width: 55%;\r\n`;\r\n\r\nconst LabelCSS = styled.label`\r\n  display: inline-block;\r\n  width: 35%;\r\n`;\r\n\r\nexport { SearchCSS, LabelCSS };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport types from \"../../reducer/types\";\r\n\r\nimport { SearchCSS, LabelCSS } from \"./styledSearch\";\r\n\r\nconst SearchField = ({ filter, changeFilter }) => (\r\n  <>\r\n    <LabelCSS htmlFor=\"search_input\">Find contacts by name</LabelCSS>\r\n    <SearchCSS\r\n      id=\"search_input\"\r\n      name=\"filter\"\r\n      type=\"text\"\r\n      value={filter}\r\n      onChange={(e) => changeFilter(e.target.value)}\r\n    ></SearchCSS>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeFilter: (text) => {\r\n    console.log(\"Filtered!\");\r\n    dispatch({\r\n      type: types.changeFilter,\r\n      value: text,\r\n    });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchField);\r\n","import styled from \"styled-components\";\r\n\r\nconst ListCSS = styled.ul`\r\n  width: 60%;\r\n`;\r\n\r\nexport { ListCSS };\r\n","import React from \"react\";\r\nimport types from \"../../reducer/types\";\r\n\r\nimport { ListCSS } from \"./styledContactList\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ContactList = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ListCSS>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button onClick={() => removeContact(id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ListCSS>\r\n  );\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\r\n}\r\n\r\nconst mapStateToProps = ({contacts}) => ({\r\n  contacts: getFilteredContacts(contacts.items, contacts.filter)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeContact: (id) => {\r\n    dispatch({\r\n      type: types.removeContact,\r\n      value: id,\r\n    });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import styled from 'styled-components';\r\n\r\nconst AppCSS = styled.div`\r\n  width: 500px;\r\n  margin: 10px auto;\r\n  box-shadow: 0px 0px 3px 2px #0a0a0a;\r\n  padding: 10px\r\n`;\r\n\r\nconst Caption = styled.h1`\r\n  width: 500px;\r\n  margin: 0 auto 10px;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst SubTitle = styled.h2`\r\n  width: 500px;\r\n  margin: 0 auto 10px;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport {\r\n  AppCSS,\r\n  Caption,\r\n  SubTitle\r\n}","import React from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport SearchField from \"./components/SearchField/SearchField\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nimport { AppCSS, Caption, SubTitle } from \"./styledApp\";\n\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\n\nconst App = ({ state }) => {\n  console.log(state);\n  return (\n    <AppCSS>\n      <Caption>Phonebook</Caption>\n      <ContactForm contacts={state.contacts}></ContactForm>\n      <SubTitle>Contacts</SubTitle>\n      <SearchField></SearchField>\n      <ContactList></ContactList>\n    </AppCSS>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\");\r\nconst removeContact = createAction(\"contacts/remove\");\r\nconst changeFilter = createAction(\"contacts/filter\");\r\n\r\nconst initState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nconst reducer = createReducer(initState, {\r\n  [addContact]: (state, action) => {\r\n    if (state.contacts.items.some(({ name }) => name === action.value.name)) {\r\n      alert(\"This contact is already exist!\");\r\n    }\r\n    return {\r\n      contacts: {\r\n        items: [...state.contacts.items, action.value],\r\n        filter: state.contacts.filter,\r\n      },\r\n    };\r\n  },\r\n\r\n  [removeContact]: (state, action) => {\r\n    return {\r\n      contacts: {\r\n        items: state.contacts.items.filter(({ id }) => id !== action.value),\r\n        filter: state.contacts.filter,\r\n      },\r\n    };\r\n  },\r\n\r\n  [changeFilter]: (state, action) => {\r\n    return {\r\n      contacts: {\r\n        items: state.contacts.items,\r\n        filter: action.value,\r\n      },\r\n    };\r\n  },\r\n});\r\n\r\nexport default reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = configureStore({reducer});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./reducer/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}